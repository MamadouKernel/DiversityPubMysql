@model IEnumerable<DiversityPub.Models.Feedback>
@{
    ViewData["Title"] = "Mes Feedbacks";
}

<style>
    :root {
        --primary-color: #A32D18;
        --secondary-color: #EDAC00;
        --accent-color: #59311F;
        --light-accent: #A26D55;
        --bg-gradient: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        --card-gradient: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
        --header-gradient: linear-gradient(135deg, #A32D18 0%, #c94a3a 100%);
    }

    body {
        background: var(--bg-gradient);
        min-height: 100vh;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .main-container {
        background: var(--card-gradient);
        border-radius: 20px;
        box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        margin: 1.5rem 0;
        transition: all 0.3s ease;
    }

    .page-header {
        background: var(--header-gradient);
        color: white;
        padding: 2rem;
        text-align: center;
        position: relative;
        overflow: hidden;
    }

    .page-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="white" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="white" opacity="0.1"/><circle cx="50" cy="10" r="0.5" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
        opacity: 0.3;
    }

    .page-title {
        font-size: 2rem;
        font-weight: 800;
        margin-bottom: 0.5rem;
        position: relative;
        z-index: 2;
    }

    .page-subtitle {
        font-size: 1rem;
        opacity: 0.9;
        position: relative;
        z-index: 2;
    }

    .content-section {
        padding: 2rem;
    }

    .stats-section {
        background: var(--card-gradient);
        border-radius: 15px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        border: 1px solid rgba(255, 255, 255, 0.8);
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 1rem;
    }

    .stat-card {
        background: var(--card-gradient);
        border: none;
        border-radius: 15px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
        transition: all 0.3s ease;
        text-align: center;
        padding: 1.5rem 1rem;
        position: relative;
        overflow: hidden;
        border: 1px solid rgba(255, 255, 255, 0.8);
    }

    .stat-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: linear-gradient(90deg, var(--primary-color), var(--secondary-color), var(--accent-color));
        background-size: 200% 100%;
        animation: gradientShift 3s ease-in-out infinite;
    }

    .stat-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
    }

    .stat-icon {
        font-size: 2rem;
        margin-bottom: 0.5rem;
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .stat-number {
        font-size: 2rem;
        font-weight: 900;
        margin-bottom: 0.25rem;
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        line-height: 1;
    }

    .stat-label {
        font-size: 0.875rem;
        color: #6c757d;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .feedback-list {
        display: grid;
        gap: 1rem;
    }

    .feedback-card {
        background: var(--card-gradient);
        border: none;
        border-radius: 15px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        border: 1px solid rgba(255, 255, 255, 0.8);
        transition: all 0.3s ease;
        position: relative;
    }

    .feedback-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: linear-gradient(90deg, var(--primary-color), var(--secondary-color), var(--accent-color));
        background-size: 200% 100%;
        animation: gradientShift 3s ease-in-out infinite;
    }

    .feedback-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
    }

    .feedback-header {
        background: var(--header-gradient);
        color: white;
        padding: 1.5rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .feedback-meta {
        display: flex;
        align-items: center;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .feedback-type {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3);
    }

    .feedback-date {
        opacity: 0.9;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
    }

    .feedback-rating {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .stars {
        display: flex;
        gap: 0.2rem;
    }

    .star {
        color: #ffd700;
        font-size: 1rem;
        filter: drop-shadow(0 1px 2px rgba(255, 215, 0, 0.3));
    }

    .star.empty {
        color: rgba(255, 255, 255, 0.5);
    }

    .rating-badge {
        background: rgba(255, 255, 255, 0.2);
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 15px;
        font-weight: 600;
        font-size: 0.875rem;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3);
    }

    .feedback-content {
        padding: 1.5rem;
    }

    .feedback-section {
        margin-bottom: 1rem;
        padding: 1rem;
        background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
        border-radius: 10px;
        border: 1px solid #e9ecef;
        transition: all 0.3s ease;
    }

    .feedback-section:hover {
        transform: translateY(-1px);
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
        border-color: var(--primary-color);
    }

    .section-title {
        font-weight: 600;
        color: var(--primary-color);
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .section-content {
        color: #2c3e50;
        line-height: 1.5;
        font-weight: 500;
        font-size: 0.9rem;
    }

    .response-section {
        background: linear-gradient(135deg, #e8f5e8 0%, #f0fff0 100%);
        border: 1px solid #28a745;
        border-radius: 10px;
        padding: 1rem;
        margin-top: 1rem;
        position: relative;
        overflow: hidden;
    }

    .response-section::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 2px;
        background: linear-gradient(90deg, #28a745, #20c997);
    }

    .response-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.75rem;
        flex-wrap: wrap;
        gap: 0.5rem;
    }

    .response-title {
        color: #155724;
        font-weight: 600;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .response-meta {
        color: #6c757d;
        font-size: 0.8rem;
        text-align: right;
        font-weight: 500;
    }

    .response-content {
        color: #2c3e50;
        line-height: 1.5;
        font-weight: 500;
        padding: 0.75rem;
        background: white;
        border-radius: 8px;
        border: 1px solid #d4edda;
        box-shadow: 0 1px 5px rgba(40, 167, 69, 0.1);
        font-size: 0.9rem;
    }

    .no-response {
        text-align: center;
        padding: 1.5rem;
        background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);
        border: 1px solid #ffc107;
        border-radius: 10px;
        margin-top: 1rem;
        position: relative;
        overflow: hidden;
    }

    .no-response::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 2px;
        background: linear-gradient(90deg, #ffc107, #ffca2c);
    }

    .no-response-icon {
        font-size: 1.5rem;
        color: #856404;
        margin-bottom: 0.5rem;
    }

    .no-response-text {
        color: #856404;
        font-weight: 600;
        font-size: 0.875rem;
    }

    .empty-state {
        text-align: center;
        padding: 3rem 2rem;
        background: var(--card-gradient);
        border-radius: 15px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
        border: 1px solid rgba(255, 255, 255, 0.8);
        margin: 1.5rem 0;
    }

    .empty-icon {
        font-size: 3rem;
        color: #dee2e6;
        margin-bottom: 1rem;
    }

    .empty-title {
        font-size: 1.25rem;
        color: #6c757d;
        margin-bottom: 0.75rem;
        font-weight: 700;
    }

    .empty-subtitle {
        color: #adb5bd;
        font-size: 0.9rem;
        line-height: 1.5;
    }

    .action-buttons {
        display: flex;
        justify-content: center;
        gap: 1rem;
        margin-bottom: 1.5rem;
        flex-wrap: wrap;
    }

    .btn-custom {
        padding: 0.75rem 1.5rem;
        border-radius: 20px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        transition: all 0.3s ease;
        border: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
        text-decoration: none;
        cursor: pointer;
        font-size: 0.875rem;
    }

    .btn-custom:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
        text-decoration: none;
    }

    .btn-primary-custom {
        background: linear-gradient(135deg, var(--primary-color), #c94a3a);
        color: white;
    }

    .btn-secondary-custom {
        background: linear-gradient(135deg, #6c757d, #495057);
        color: white;
    }

    .btn-success-custom {
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
    }

    .btn-warning-custom {
        background: linear-gradient(135deg, #ffc107, #ffca2c);
        color: #212529;
    }

    .alert {
        padding: 1rem 1.5rem;
        border-radius: 10px;
        margin-bottom: 1rem;
        border: none;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
    }

    .alert-success {
        background: linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%);
        color: #155724;
        border-left: 4px solid #28a745;
    }

    .alert-danger {
        background: linear-gradient(135deg, #f8d7da 0%, #f5c6cb 100%);
        color: #721c24;
        border-left: 4px solid #dc3545;
    }

    .container-fluid {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1.5rem;
    }

    /* Animations */
    @@keyframes gradientShift {
        0%, 100% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
    }

    @@keyframes slideIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .fade-in {
        animation: slideIn 0.4s ease-out;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .page-title {
            font-size: 1.75rem;
        }
        
        .stats-grid {
            grid-template-columns: repeat(2, 1fr);
        }
        
        .container-fluid {
            padding: 0 1rem;
        }
        
        .action-buttons {
            flex-direction: column;
            align-items: center;
        }
        
        .feedback-header {
            flex-direction: column;
            align-items: flex-start;
        }
        
        .feedback-meta {
            flex-direction: column;
            align-items: flex-start;
        }
        
        .response-header {
            flex-direction: column;
            align-items: flex-start;
        }
        
        .response-meta {
            text-align: left;
        }
    }
</style>

<div class="container-fluid">
    <div class="main-container">
        <div class="page-header">
            <h1 class="page-title">
                <i class="fas fa-comments"></i>
                Mes Feedbacks
            </h1>
            <p class="page-subtitle">Historique de vos évaluations</p>
        </div>

        <div class="content-section">
            @Html.AntiForgeryToken()
            
            <!-- Messages d'alerte -->
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success fade-in">
                    <i class="fas fa-check-circle"></i> @TempData["Success"]
                </div>
            }
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger fade-in">
                    <i class="fas fa-times-circle"></i> @TempData["Error"]
                </div>
            }

            <!-- Statistiques -->
            <div class="stats-section fade-in">
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-comments"></i>
                        </div>
                        <div class="stat-number">@(ViewBag.TotalFeedbacks ?? Model.Count())</div>
                        <div class="stat-label">Total</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-star"></i>
                        </div>
                        <div class="stat-number">@(Model.Any() ? Model.Average(f => f.Note).ToString("F1") : "0")</div>
                        <div class="stat-label">Note Moy.</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-reply"></i>
                        </div>
                        <div class="stat-number">@Model.Count(f => !string.IsNullOrEmpty(f.ReponseAdmin))</div>
                        <div class="stat-label">Réponses</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-clock"></i>
                        </div>
                        <div class="stat-number">@Model.Count(f => string.IsNullOrEmpty(f.ReponseAdmin))</div>
                        <div class="stat-label">En Attente</div>
                    </div>
                </div>
            </div>

            <!-- Boutons d'action -->
            <div class="action-buttons">
                <button id="createTestDataBtn" class="btn btn-warning-custom btn-custom">
                    <i class="fas fa-database"></i>
                    Créer Données Test
                </button>
                <a href="@Url.Action("CreateFeedback", "ClientDashboard")" class="btn btn-success-custom btn-custom">
                    <i class="fas fa-plus"></i>
                    Nouveau Feedback
                </a>
            </div>

            <!-- Indicateur des derniers feedbacks -->
            @if (ViewBag.ShowMoreButton == true)
            {
                <div class="text-center mb-3 fade-in">
                    <div class="alert alert-info" style="background: linear-gradient(135deg, #d1ecf1 0%, #bee5eb 100%); border: 1px solid #17a2b8; color: #0c5460; border-radius: 10px; padding: 1rem;">
                        <i class="fas fa-info-circle"></i>
                        <strong>Affichage des 5 derniers feedbacks</strong> sur @(ViewBag.TotalFeedbacks) au total
                    </div>
                </div>
            }

            <!-- Liste des feedbacks -->
            @if (Model.Any())
            {
                <div class="feedback-list">
                    @foreach (var item in Model)
                    {
                        <div class="feedback-card fade-in">
                            <div class="feedback-header">
                                <div class="feedback-meta">
                                    <div class="feedback-type">
                                        <i class="fas @(item.CampagneId != null ? "fa-bullhorn" : "fa-map-marker-alt")"></i>
                                        @(item.CampagneId != null ? "Campagne" : "Activation")
                                    </div>
                                    <div class="feedback-date">
                                        <i class="fas fa-calendar"></i>
                                        @item.DateFeedback.ToString("dd/MM/yyyy à HH:mm")
                                    </div>
                                </div>
                                <div class="feedback-rating">
                                    <div class="stars">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= item.Note)
                                            {
                                                <i class="fas fa-star star"></i>
                                            }
                                            else
                                            {
                                                <i class="far fa-star star empty"></i>
                                            }
                                        }
                                    </div>
                                    <span class="rating-badge">@item.Note/5</span>
                                </div>
                            </div>
                            
                            <div class="feedback-content">
                                <div class="feedback-section">
                                    <h6 class="section-title">
                                        <i class="fas fa-tasks"></i> Élément évalué
                                    </h6>
                                    <div class="section-content">
                                        @if (item.CampagneId != null)
                                        {
                                            <strong>@item.Campagne?.Nom</strong>
                                            <br>
                                            <small class="text-muted">
                                                @item.Campagne?.DateDebut.ToString("dd/MM/yyyy") - @item.Campagne?.DateFin.ToString("dd/MM/yyyy")
                                            </small>
                                        }
                                        else if (item.ActivationId != null)
                                        {
                                            <strong>@item.Activation?.Nom</strong>
                                            <br>
                                            <small class="text-muted">
                                                Campagne: @item.Activation?.Campagne?.Nom
                                                <br>
                                                Date: @item.Activation?.DateActivation.ToString("dd/MM/yyyy")
                                            </small>
                                        }
                                    </div>
                                </div>
                                
                                <div class="feedback-section">
                                    <h6 class="section-title">
                                        <i class="fas fa-comment"></i> Votre commentaire
                                    </h6>
                                    <div class="section-content">
                                        @if (!string.IsNullOrEmpty(item.Commentaire))
                                        {
                                            @item.Commentaire
                                        }
                                        else
                                        {
                                            <span class="text-muted">Aucun commentaire</span>
                                        }
                                    </div>
                                </div>
                                
                                @if (!string.IsNullOrEmpty(item.ReponseAdmin))
                                {
                                    <div class="response-section">
                                        <div class="response-header">
                                            <h6 class="response-title">
                                                <i class="fas fa-reply"></i> Réponse de l'équipe
                                            </h6>
                                            <div class="response-meta">
                                                <i class="fas fa-user"></i> @item.AdminRepondant
                                                <br>
                                                <i class="fas fa-clock"></i> @item.DateReponseAdmin?.ToString("dd/MM/yyyy à HH:mm")
                                            </div>
                                        </div>
                                        <div class="response-content">
                                            @item.ReponseAdmin
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="no-response">
                                        <div class="no-response-icon">
                                            <i class="fas fa-clock"></i>
                                        </div>
                                        <div class="no-response-text">
                                            En attente de réponse de l'équipe
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>

                <!-- Bouton Voir Plus -->
                @if (ViewBag.ShowMoreButton == true)
                {
                    <div class="text-center mt-4 fade-in">
                        <a href="@Url.Action("FeedbacksAll", "ClientDashboard")" class="btn btn-primary-custom btn-custom">
                            <i class="fas fa-eye"></i>
                            Voir tous les feedbacks (@(ViewBag.TotalFeedbacks) au total)
                        </a>
                    </div>
                }
            }
            else
            {
                <div class="empty-state fade-in">
                    <div class="empty-icon">
                        <i class="fas fa-comments"></i>
                    </div>
                    <h3 class="empty-title">Aucun feedback trouvé</h3>
                    <p class="empty-subtitle">
                        Vous n'avez pas encore laissé de feedback sur vos campagnes ou activations.
                        <br><br>
                        <a href="@Url.Action("CreateFeedback", "ClientDashboard")" class="btn btn-success-custom btn-custom">
                            <i class="fas fa-plus"></i>
                            Créer votre premier feedback
                        </a>
                    </p>
                </div>
            }
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const createTestDataBtn = document.getElementById('createTestDataBtn');
        if (createTestDataBtn) {
            createTestDataBtn.addEventListener('click', function() {
                this.disabled = true;
                this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Création...';

                fetch('/ClientDashboard/CreateTestData', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showNotification('✅ ' + data.message, 'success');
                        setTimeout(() => {
                            window.location.reload();
                        }, 1500);
                    } else {
                        showNotification('❌ ' + data.message, 'error');
                    }
                })
                .catch(error => {
                    console.error('Erreur:', error);
                    showNotification('❌ Erreur lors de la création des données de test', 'error');
                })
                .finally(() => {
                    this.disabled = false;
                    this.innerHTML = '<i class="fas fa-database"></i> Créer Données Test';
                });
            });
        }

        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.className = `alert alert-${type === 'success' ? 'success' : 'danger'} fade-in`;
            notification.style.position = 'fixed';
            notification.style.top = '20px';
            notification.style.right = '20px';
            notification.style.zIndex = '9999';
            notification.style.minWidth = '300px';
            notification.innerHTML = `<i class="fas fa-${type === 'success' ? 'check-circle' : 'times-circle'}"></i> ${message}`;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 5000);
        }

        // Animation simple des cartes
        document.querySelectorAll('.feedback-card').forEach((card, index) => {
            card.style.opacity = '0';
            card.style.transform = 'translateY(20px)';
            card.style.transition = 'opacity 0.4s ease, transform 0.4s ease';
            
            setTimeout(() => {
                card.style.opacity = '1';
                card.style.transform = 'translateY(0)';
            }, index * 100);
        });
    });
</script> 