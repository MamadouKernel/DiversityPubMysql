@model DiversityPub.Models.AgentTerrain
@{
    Layout = null;
    ViewData["Title"] = "Mon Profil";
    var agent = ViewBag.Agent as DiversityPub.Models.AgentTerrain;
}

<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Diversity Pub</title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            overflow-x: hidden;
        }
        
        .profile-container {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }
        
        /* Header */
        .profile-header {
            background: linear-gradient(135deg, #A32D18 0%, #EDAC00 100%);
            color: white;
            padding: 1.5rem;
            box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        }
        
        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1200px;
            margin: 0 auto;
        }
        
        .header-left {
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        
        .back-btn {
            background: rgba(255,255,255,0.2);
            border: 1px solid rgba(255,255,255,0.3);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            text-decoration: none;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .back-btn:hover {
            background: rgba(255,255,255,0.3);
            color: white;
            text-decoration: none;
        }
        
        .header-title {
            font-size: 1.8rem;
            font-weight: 700;
            margin: 0;
        }
        
        .header-subtitle {
            font-size: 1rem;
            opacity: 0.9;
            margin: 0.25rem 0 0 0;
        }
        
        /* Main Content */
        .profile-content {
            flex: 1;
            padding: 2rem 1.5rem;
            max-width: 1200px;
            margin: 0 auto;
            width: 100%;
        }
        
        /* Cards */
        .profile-card {
            background: white;
            border-radius: 16px;
            padding: 2rem;
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            border: 1px solid #e9ecef;
            margin-bottom: 2rem;
        }
        
        .profile-header-card {
            display: flex;
            align-items: center;
            gap: 1.5rem;
            margin-bottom: 2rem;
            padding-bottom: 1.5rem;
            border-bottom: 1px solid #e9ecef;
        }
        
        .profile-avatar {
            width: 100px;
            height: 100px;
            background: linear-gradient(135deg, #A32D18 0%, #EDAC00 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 2.5rem;
            font-weight: 700;
        }
        
        .profile-info h2 {
            margin: 0;
            color: #2c3e50;
            font-weight: 700;
        }
        
        .profile-info p {
            margin: 0.5rem 0 0 0;
            color: #6c757d;
            font-size: 1.1rem;
        }
        
        /* Info Items */
        .info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1rem;
        }
        
        .info-item {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 12px;
            border: 1px solid #e9ecef;
        }
        
        .info-icon {
            width: 50px;
            height: 50px;
            background: #A32D18;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.2rem;
        }
        
        .info-content {
            flex: 1;
        }
        
        .info-label {
            font-size: 0.85rem;
            color: #6c757d;
            font-weight: 500;
            margin-bottom: 0.25rem;
        }
        
        .info-value {
            font-weight: 600;
            color: #2c3e50;
            font-size: 1rem;
        }
        
        /* Statistics */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }
        
        .stat-card {
            background: white;
            border-radius: 16px;
            padding: 2rem;
            text-align: center;
            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
            border: 1px solid #e9ecef;
            transition: all 0.3s ease;
        }
        
        .stat-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }
        
        .stat-icon {
            font-size: 2.5rem;
            color: #A32D18;
            margin-bottom: 1rem;
        }
        
        .stat-number {
            font-size: 2.5rem;
            font-weight: 700;
            color: #A32D18;
            margin-bottom: 0.5rem;
        }
        
        .stat-label {
            color: #6c757d;
            font-weight: 500;
            font-size: 1rem;
        }
        
        /* Password Form */
        .password-form {
            background: white;
            border-radius: 16px;
            padding: 2rem;
            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
        }
        
        .form-title {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            font-size: 1.5rem;
            font-weight: 700;
            color: #2c3e50;
            margin-bottom: 2rem;
        }
        
        .form-title i {
            color: #A32D18;
        }
        
        .form-group {
            margin-bottom: 1.5rem;
        }
        
        .form-label {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 0.75rem;
        }
        
        .form-label.required::after {
            content: " *";
            color: #dc3545;
        }
        
        .form-control {
            border-radius: 12px;
            border: 2px solid #e9ecef;
            padding: 1rem;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: #f8f9fa;
        }
        
        .form-control:focus {
            border-color: #A32D18;
            box-shadow: 0 0 0 0.2rem rgba(163, 45, 24, 0.25);
            outline: none;
            background: white;
        }
        
        .btn-change-password {
            background: #A32D18;
            border: none;
            color: white;
            padding: 1rem 2rem;
            border-radius: 12px;
            font-weight: 600;
            font-size: 1.1rem;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }
        
        .btn-change-password:hover {
            background: #8a2514;
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(163, 45, 24, 0.3);
        }
        
        /* Toast notifications */
        .toast-container {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 9999;
        }
        
        .toast {
            border-radius: 12px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.2);
        }
        
        /* Responsive */
        @@media (max-width: 768px) {
            .header-content {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }
            
            .profile-header-card {
                flex-direction: column;
                text-align: center;
            }
            
            .info-grid {
                grid-template-columns: 1fr;
            }
            
            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
            }
            
            .profile-content {
                padding: 1rem;
            }
        }
        
        @@media (max-width: 480px) {
            .stats-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="profile-container">
        <!-- Header -->
        <div class="profile-header">
            <div class="header-content">
                <div class="header-left">
                    <a href="@Url.Action("Missions", "AgentTerrain")" class="back-btn">
                        <i class="fas fa-arrow-left"></i>
                        Retour
                    </a>
                    <div>
                        <h1 class="header-title">Mon Profil</h1>
                        <p class="header-subtitle">@(agent?.Utilisateur != null ? $"{agent.Utilisateur.Prenom} {agent.Utilisateur.Nom}" : "Agent")</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="profile-content">
            <!-- Informations personnelles -->
            <div class="profile-card">
                <div class="profile-header-card">
                    <div class="profile-avatar">
                        @(agent?.Utilisateur?.Prenom?.Substring(0, 1) ?? "A")
                    </div>
                    <div class="profile-info">
                        <h2>@(agent?.Utilisateur?.Prenom ?? "Agent") @(agent?.Utilisateur?.Nom ?? "")</h2>
                        <p>Agent Terrain</p>
                    </div>
                </div>
                
                <div class="info-grid">
                    <div class="info-item">
                        <div class="info-icon">
                            <i class="fas fa-envelope"></i>
                        </div>
                        <div class="info-content">
                            <div class="info-label">Email</div>
                            <div class="info-value">@(agent?.Utilisateur?.Email ?? "Non défini")</div>
                        </div>
                    </div>
                    
                    <div class="info-item">
                        <div class="info-icon">
                            <i class="fas fa-phone"></i>
                        </div>
                        <div class="info-content">
                            <div class="info-label">Téléphone</div>
                            <div class="info-value">@(agent?.Telephone ?? "Non défini")</div>
                        </div>
                    </div>
                    
                    <div class="info-item">
                        <div class="info-icon">
                            <i class="fas fa-user-tag"></i>
                        </div>
                        <div class="info-content">
                            <div class="info-label">Rôle</div>
                            <div class="info-value">@(agent?.Utilisateur?.Role.ToString() ?? "AgentTerrain")</div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Statistiques -->
            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-icon">
                        <i class="fas fa-tasks"></i>
                    </div>
                    <div class="stat-number">@(Model.Activations?.Count ?? 0)</div>
                    <div class="stat-label">Missions Assignées</div>
                </div>
                <div class="stat-card">
                    <div class="stat-icon">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <div class="stat-number">@(Model.Activations?.Count(a => a.Statut == DiversityPub.Models.enums.StatutActivation.Terminee) ?? 0)</div>
                    <div class="stat-label">Missions Terminées</div>
                </div>
                <div class="stat-card">
                    <div class="stat-icon">
                        <i class="fas fa-exclamation-triangle"></i>
                    </div>
                    <div class="stat-number">@(Model.Incidents?.Count ?? 0)</div>
                    <div class="stat-label">Incidents Signalés</div>
                </div>
                <div class="stat-card">
                    <div class="stat-icon">
                        <i class="fas fa-images"></i>
                    </div>
                    <div class="stat-number">@(Model.Medias?.Count ?? 0)</div>
                    <div class="stat-label">Preuves Envoyées</div>
                </div>
            </div>

            <!-- Changement de mot de passe -->
            <div class="password-form">
                <div class="form-title">
                    <i class="fas fa-lock"></i>
                    🔐 Changer mon mot de passe
                </div>
                
                <form method="post" action="@Url.Action("ChangePassword", "AgentTerrain")">
                    @Html.AntiForgeryToken()
                    
                    <div class="form-group">
                        <label class="form-label required">
                            <i class="fas fa-key" style="color: #007bff;"></i>
                            Mot de passe actuel
                        </label>
                        <input type="password" class="form-control" name="CurrentPassword" required>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label required">
                            <i class="fas fa-lock" style="color: #28a745;"></i>
                            Nouveau mot de passe
                        </label>
                        <input type="password" class="form-control" name="NewPassword" required>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label required">
                            <i class="fas fa-check-circle" style="color: #ffc107;"></i>
                            Confirmer le nouveau mot de passe
                        </label>
                        <input type="password" class="form-control" name="ConfirmPassword" required>
                    </div>
                    
                    <button type="submit" class="btn-change-password">
                        <i class="fas fa-save"></i>
                        🔐 Changer le mot de passe
                    </button>
                </form>
            </div>
        </div>
    </div>

    <!-- Toast container -->
    <div class="toast-container"></div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // Afficher les messages TempData
        @if (TempData["Success"] != null)
        {
            <text>
            $(document).ready(function() {
                showToast('@TempData["Success"]', 'success');
            });
            </text>
        }
        
        @if (TempData["Error"] != null)
        {
            <text>
            $(document).ready(function() {
                showToast('@TempData["Error"]', 'error');
            });
            </text>
        }
        
        function showToast(message, type) {
            const toast = $(`
                <div class="toast show" role="alert">
                    <div class="toast-header ${type === 'success' ? 'bg-success text-white' : 'bg-danger text-white'}">
                        <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-triangle'} me-2"></i>
                        <strong class="me-auto">${type === 'success' ? 'Succès' : 'Erreur'}</strong>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
                    </div>
                    <div class="toast-body">
                        ${message}
                    </div>
                </div>
            `);
            
            $('.toast-container').append(toast);
            
            setTimeout(() => {
                toast.remove();
            }, 5000);
        }
    </script>
</body>
</html> 