@model IEnumerable<DiversityPub.Models.Activation>
@{
    Layout = "_AgentLayout";
    ViewData["Title"] = "Mes missions";
    var agent = ViewBag.Agent as DiversityPub.Models.AgentTerrain;
    
    int total = 0, enCours = 0, term = 0, plan = 0;
    if (Model != null)
    {
        foreach (var a in Model)
        {
            total++;
            switch (a.Statut)
            {
                case DiversityPub.Models.enums.StatutActivation.EnCours: enCours++; break;
                case DiversityPub.Models.enums.StatutActivation.Terminee: term++; break;
                case DiversityPub.Models.enums.StatutActivation.Planifiee: plan++; break;
            }
        }
    }
}

<style>
    :root {
        --brand: #A32D18;
        --gold: #EDAC00;
        --secondary: #59311F;
        --accent: #A26D55;
        --ink: #1F2937;
        --muted: #6B7280;
        --light-muted: #9CA3AF;
        --bg: #F8FAFC;
        --card: #ffffff;
        --line: #E2E8F0;
        --shadow: rgba(0, 0, 0, 0.1);
        --shadow-lg: rgba(0, 0, 0, 0.15);
        --ok: #10B981;
        --warn: #F59E0B;
        --info: #3B82F6;
        --danger: #EF4444;
        --gradient-brand: linear-gradient(135deg, var(--brand), var(--gold));
        --gradient-subtle: linear-gradient(135deg, #ffffff, #f1f5f9);
    }

    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    body {
        background: var(--bg);
        color: var(--ink);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        line-height: 1.6;
    }

    .wrap {
        padding: 1.5rem;
        max-width: 1400px;
        margin: 0 auto;
    }

    /* Navigation Principale */
    .main-nav {
        background: var(--gradient-brand);
        border-radius: 20px;
        padding: 1rem 2rem;
        margin-bottom: 2rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
        box-shadow: 0 8px 32px rgba(163, 45, 24, 0.3);
        gap: 2rem;
    }

    .nav-left {
        display: flex;
        align-items: center;
        gap: 2rem;
    }

    .status-indicator {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: white;
        font-weight: 600;
        background: rgba(255, 255, 255, 0.1);
        padding: 0.5rem 1rem;
        border-radius: 15px;
        backdrop-filter: blur(10px);
    }

    .dot {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background: var(--ok);
        box-shadow: 0 0 12px rgba(16, 185, 129, 0.6);
        animation: pulse 2s infinite;
    }

    @@keyframes pulse {
        0%, 100% { opacity: 1; transform: scale(1); }
        50% { opacity: 0.7; transform: scale(1.1); }
    }

    .mission-count {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: white;
        font-weight: 600;
        background: rgba(255, 255, 255, 0.1);
        padding: 0.5rem 1rem;
        border-radius: 15px;
        backdrop-filter: blur(10px);
    }

    .nav-actions {
        display: flex;
        gap: 0.5rem;
    }

    .nav-btn {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 0.25rem;
        padding: 1rem 1.5rem;
        border-radius: 15px;
        background: rgba(255, 255, 255, 0.1);
        color: white;
        text-decoration: none;
        font-weight: 700;
        font-size: 0.8rem;
        letter-spacing: 0.5px;
        transition: all 0.3s ease;
        border: 2px solid transparent;
        backdrop-filter: blur(10px);
    }

    .nav-btn:hover {
        background: rgba(255, 255, 255, 0.2);
        transform: translateY(-2px);
        color: white;
        text-decoration: none;
    }

    .nav-btn.active {
        background: rgba(255, 255, 255, 0.9);
        color: var(--brand);
        border-color: rgba(255, 255, 255, 0.3);
    }

    .nav-btn i {
        font-size: 1.2rem;
        margin-bottom: 0.25rem;
    }

    /* Titre de page */
    .page-title-section {
        text-align: center;
        margin-bottom: 2rem;
    }

    .main-title {
        font-size: 2.5rem;
        font-weight: 800;
        background: var(--gradient-brand);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin: 0 0 0.5rem 0;
        line-height: 1.2;
    }

    .user-info {
        font-size: 1.1rem;
        color: var(--muted);
        font-weight: 600;
        margin: 0;
    }

    .btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        background: var(--card);
        border: 1px solid var(--line);
        border-radius: 15px;
        padding: 0.75rem 1.25rem;
        font-weight: 600;
        color: var(--ink);
        text-decoration: none;
        transition: all 0.3s ease;
        box-shadow: 0 4px 12px var(--shadow);
    }

    .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px var(--shadow-lg);
    }

    /* Enhanced Stats */
    .stats {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .stat {
        background: var(--card);
        border: 1px solid var(--line);
        border-radius: 20px;
        padding: 1.5rem 1rem;
        text-align: center;
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease;
        box-shadow: 0 4px 20px var(--shadow);
        cursor: pointer;
    }

    .stat::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: var(--gradient-brand);
        transform: scaleX(0);
        transition: transform 0.3s ease;
    }

    .stat:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 40px var(--shadow-lg);
    }

    .stat:hover::before {
        transform: scaleX(1);
    }

    .stat .n {
        font-size: 2.5rem;
        font-weight: 900;
        background: var(--gradient-brand);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin-bottom: 0.5rem;
        display: block;
        line-height: 1;
    }

    .stat .l {
        font-size: 0.875rem;
        color: var(--muted);
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .stat .icon {
        position: absolute;
        top: 1rem;
        right: 1rem;
        font-size: 1.5rem;
        color: var(--light-muted);
        opacity: 0.3;
    }

    /* Enhanced Search & Filters */
    .tools {
        background: var(--card);
        border: 1px solid var(--line);
        border-radius: 20px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 20px var(--shadow);
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .search-section {
        display: flex;
        gap: 1rem;
        align-items: center;
        flex-wrap: wrap;
    }

    .search {
        flex: 1;
        min-width: 300px;
            display: flex;
        align-items: center;
        gap: 0.75rem;
        border: 2px solid var(--line);
        border-radius: 15px;
        padding: 0.75rem 1rem;
        background: var(--bg);
        transition: all 0.3s ease;
    }

    .search:focus-within {
        border-color: var(--brand);
        box-shadow: 0 0 0 3px rgba(163, 45, 24, 0.1);
    }

    .search i {
        color: var(--muted);
        font-size: 1.1rem;
    }

    .search input {
        border: 0;
        outline: 0;
        width: 100%;
        background: transparent;
        font-size: 1rem;
        color: var(--ink);
        font-weight: 500;
    }

    .search input::placeholder {
        color: var(--light-muted);
    }

    .filter-label {
        font-weight: 600;
        color: var(--ink);
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .chips {
        display: flex;
        gap: 0.75rem;
        overflow: auto;
        padding: 0.5rem 0;
    }

    .chip {
        white-space: nowrap;
        padding: 0.75rem 1.25rem;
        border: 2px solid var(--line);
        border-radius: 25px;
        background: var(--card);
        font-weight: 600;
        font-size: 0.875rem;
        color: var(--muted);
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .chip::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: var(--gradient-brand);
        transition: left 0.3s ease;
        z-index: -1;
    }

    .chip:hover {
        border-color: var(--brand);
        color: var(--brand);
        transform: translateY(-2px);
    }

    .chip.active {
        background: var(--gradient-brand);
        color: white;
        border-color: var(--brand);
        box-shadow: 0 4px 15px rgba(163, 45, 24, 0.3);
    }

    .chip.active::before {
        left: 0;
    }

    /* Enhanced Mission Cards Grid */
    .grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));
        gap: 1.5rem;
        padding: 0;
    }

    .col {
        display: contents;
    }

    .mission {
        position: relative;
    }

    .card {
        background: var(--card);
        border: 1px solid var(--line);
        border-radius: 24px;
        overflow: hidden;
        transition: all 0.3s ease;
        box-shadow: 0 4px 20px var(--shadow);
        position: relative;
        height: 100%;
        display: flex;
        flex-direction: column;
    }

    .card:hover {
        transform: translateY(-8px);
        box-shadow: 0 20px 40px var(--shadow-lg);
        border-color: var(--brand);
    }

    .card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 6px;
        background: var(--gradient-brand);
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .card:hover::before {
        opacity: 1;
    }

    .head {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1.5rem 1.5rem 1rem;
        background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(248, 250, 252, 0.8));
    }

    .title {
        font-weight: 800;
        margin: 0;
        font-size: 1.25rem;
        color: var(--ink);
        line-height: 1.2;
    }

    .badge {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: 700;
        font-size: 0.75rem;
        letter-spacing: 0.5px;
        text-transform: uppercase;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .b-plan {
        background: linear-gradient(135deg, #FEF3C7, #FDE68A);
        color: #92400E;
        border: 1px solid #F59E0B;
    }

    .b-run {
        background: linear-gradient(135deg, #D1FAE5, #A7F3D0);
        color: #065F46;
        border: 1px solid #10B981;
    }

    .b-done {
        background: linear-gradient(135deg, #DBEAFE, #BFDBFE);
        color: #1E40AF;
        border: 1px solid #3B82F6;
    }

    .b-hold {
        background: linear-gradient(135deg, #FEE2E2, #FECACA);
        color: #991B1B;
        border: 1px solid #EF4444;
    }

    .body {
        padding: 1rem 1.5rem;
        display: grid;
        gap: 1rem;
        flex: 1;
    }

    .row {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 0.75rem;
        background: var(--bg);
        border-radius: 15px;
        transition: all 0.2s ease;
    }

    .row:hover {
        background: rgba(163, 45, 24, 0.05);
        transform: translateX(5px);
    }

    .ico {
        width: 42px;
        height: 42px;
        border-radius: 15px;
        display: grid;
        place-items: center;
        color: white;
        font-size: 1.1rem;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

    .c1 {
        background: linear-gradient(135deg, var(--brand), var(--gold));
    }

    .c2 {
        background: linear-gradient(135deg, #0EA5E9, #22D3EE);
    }

    .c3 {
        background: linear-gradient(135deg, #6366F1, #8B5CF6);
    }

    .c4 {
        background: linear-gradient(135deg, var(--secondary), var(--accent));
    }

    .label {
        font-size: 0.75rem;
        color: var(--muted);
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin-bottom: 0.25rem;
    }

    .val {
        font-size: 1rem;
        font-weight: 700;
        color: var(--ink);
        line-height: 1.3;
    }

    .desc {
        background: linear-gradient(135deg, #F8FAFC, #E2E8F0);
        border: 2px dashed var(--line);
        border-radius: 15px;
        padding: 1rem;
        margin-top: 0.5rem;
        font-style: italic;
        color: var(--muted);
    }

    .foot {
        padding: 1rem 1.5rem 1.5rem;
        border-top: 1px solid var(--line);
        display: flex;
        gap: 0.75rem;
        flex-wrap: wrap;
        background: linear-gradient(135deg, rgba(255, 255, 255, 0.5), rgba(248, 250, 252, 0.8));
    }

    .btn.pill {
        flex: 1;
        min-width: 120px;
        justify-content: center;
        border-radius: 20px;
        padding: 0.75rem 1rem;
        font-weight: 700;
        font-size: 0.875rem;
            transition: all 0.3s ease;
    }

    .btn.pill:hover {
        transform: translateY(-3px);
    }

    .ok {
        background: linear-gradient(135deg, var(--ok), #059669);
        border-color: var(--ok);
        color: white;
    }

    .warn {
        background: linear-gradient(135deg, var(--warn), #D97706);
        border-color: var(--warn);
        color: white;
    }

    .danger {
        background: linear-gradient(135deg, var(--danger), #DC2626);
        border-color: var(--danger);
        color: white;
    }

    .info {
        background: linear-gradient(135deg, var(--info), #2563EB);
        border-color: var(--info);
        color: white;
    }



    /* Restricted Notice */
    .restricted-notice {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        background: linear-gradient(135deg, #F9FAFB, #F3F4F6);
        color: var(--muted);
        padding: 0.75rem 1rem;
        border-radius: 15px;
        border: 1px solid var(--line);
        font-size: 0.875rem;
        font-weight: 600;
        flex: 1;
        justify-content: center;
    }

    .restricted-notice i {
        color: var(--light-muted);
    }

    /* Responsive Design */
    @@media (max-width: 1200px) {
        .grid {
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        }
        
        .stats {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @@media (max-width: 768px) {
        .wrap {
            padding: 1rem;
        }
        
        .main-nav {
            flex-direction: column;
            gap: 1.5rem;
            padding: 1rem;
        }
        
        .nav-left {
            justify-content: center;
            gap: 1rem;
        }
        
        .nav-actions {
            justify-content: center;
            flex-wrap: wrap;
        }
        
        .main-title {
            font-size: 2rem;
        }
        
        .tools {
            padding: 1rem;
        }
        
        .search-section {
            flex-direction: column;
            align-items: stretch;
        }
        
        .search {
            min-width: auto;
        }
        
        .chips {
            flex-wrap: wrap;
            justify-content: center;
        }
        
        .grid {
            grid-template-columns: 1fr;
        }
        
        .stats {
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
        }
        
        .stat {
            padding: 1rem;
        }
        

    }

    @@media (max-width: 480px) {
        .main-nav {
            padding: 0.8rem;
        }
        
        .nav-left {
            flex-direction: column;
            gap: 0.5rem;
        }
        
        .nav-btn {
            padding: 0.8rem 1rem;
            font-size: 0.75rem;
        }
        
        .nav-btn i {
            font-size: 1rem;
        }
        
        .main-title {
            font-size: 1.8rem;
        }
        
        .stats {
            grid-template-columns: 1fr;
        }
        
        .card {
            border-radius: 16px;
        }
        
        .head, .body, .foot {
            padding: 1rem;
        }
        
        .btn.pill {
            min-width: auto;
            padding: 0.6rem 0.8rem;
            font-size: 0.8rem;
        }
        
        .foot {
            flex-direction: column;
            gap: 0.5rem;
        }
        

    }

    /* Empty State */
    .empty-state {
        background: var(--card);
        border: 2px dashed var(--line);
        border-radius: 24px;
        padding: 3rem 2rem;
        text-align: center;
        margin: 2rem 0;
        transition: all 0.3s ease;
    }

    .empty-state:hover {
        border-color: var(--brand);
        background: linear-gradient(135deg, rgba(163, 45, 24, 0.02), rgba(237, 172, 0, 0.02));
    }

    .empty-state .icon {
        font-size: 4rem;
        color: var(--light-muted);
        margin-bottom: 1rem;
        background: var(--gradient-brand);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .empty-state h3 {
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--ink);
        margin-bottom: 0.5rem;
    }

    .empty-state .label {
        font-size: 1rem;
        color: var(--muted);
        font-weight: 500;
        }
    </style>

<div class="wrap">
        <!-- NAVIGATION PRINCIPALE -->
    <div class="main-nav">
        <div class="nav-left">
            <div class="status-indicator">
                <span class="dot" id="onlineDot"></span>
                <span>En ligne</span>
                        </div>
            <div class="mission-count">
                <i class="fas fa-list"></i>
                <span>@total missions</span>
                    </div>
                </div>
        <div class="nav-actions">
            <a class="nav-btn active" href="@Url.Action("Missions", "AgentTerrain")">
                <i class="fas fa-list"></i>
                <span>ACTIVATIONS</span>
            </a>
            <a class="nav-btn" href="@Url.Action("EnvoyerPreuve", "AgentTerrain")">
                <i class="fas fa-camera"></i>
                <span>PREUVES</span>
            </a>
            <a class="nav-btn" href="@Url.Action("SignalerIncident", "AgentTerrain")">
                <i class="fas fa-exclamation-triangle"></i>
                <span>INCIDENT</span>
            </a>
                </div>
            </div>

    <!-- TITRE DE PAGE -->
    <div class="page-title-section">
        <h1 class="main-title">Mes Missions</h1>
        <p class="user-info">@(agent?.Utilisateur?.Prenom) @(agent?.Utilisateur?.Nom)</p>
                        </div>
                        
    <!-- SEARCH & FILTERS -->
    <div class="tools">
        <div class="search-section">
            <div class="search">
                <i class="fas fa-search"></i>
                <input id="q" placeholder="Rechercher une mission (nom, lieu, campagne)" />
                                </div>
                            </div>
        <div>
            <div class="filter-label">Filtrer par statut</div>
            <div class="chips">
                <button class="chip active" data-filter="all">Toutes</button>
                <button class="chip" data-filter="today">Aujourd'hui</button>
                <button class="chip" data-filter="running">En cours</button>
                <button class="chip" data-filter="upcoming">À venir</button>
                <button class="chip" data-filter="done">Terminées</button>
                                </div>
                                </div>
                            </div>
                            
        <!-- STATS -->
    <div class="stats">
        <div class="stat">
            <i class="fas fa-tasks icon"></i>
            <div class="n">@total</div>
            <div class="l">Total</div>
                                </div>
        <div class="stat">
            <i class="fas fa-clock icon"></i>
            <div class="n">@plan</div>
            <div class="l">Planifiées</div>
                                            </div>
        <div class="stat">
            <i class="fas fa-play-circle icon"></i>
            <div class="n">@enCours</div>
            <div class="l">En cours</div>
                                            </div>
        <div class="stat">
            <i class="fas fa-check-circle icon"></i>
            <div class="n">@term</div>
            <div class="l">Terminées</div>
                                            </div>
                                        </div>
                                        
    <!-- GRID -->
    @if (Model != null && Model.Any())
                {
        <div class="grid" id="grid">
            @foreach (var a in Model)
            {
                var isBoss = a.ResponsableId != null && agent?.Id == a.ResponsableId;
                var hd = a.HeureDebut; var hf = a.HeureFin;
                                                            <div class="col mission" data-date="@a.DateActivation.ToString("yyyy-MM-dd")" data-statut="@a.Statut" data-text="@($"{a.Nom} {a.Campagne?.Nom} {a.Lieu?.Nom} - {a.Lieu?.Adresse}")">
                                                                <div class="card">
                                                                    <div class="head">
                                                                        <h3 class="title">@a.Nom</h3>
                            @switch (a.Statut)
                            {
                                case DiversityPub.Models.enums.StatutActivation.Planifiee:
                                    <text><span class="badge b-plan">PLANIFIÉE</span></text>
                                    ; break;
                                case DiversityPub.Models.enums.StatutActivation.EnCours:

                                    <text><span class="badge b-run">EN COURS</span></text>
                                    ; break;
                                case DiversityPub.Models.enums.StatutActivation.Terminee:

                                    <text><span class="badge b-done">TERMINÉE</span></text>
                                    ; break;
                                case DiversityPub.Models.enums.StatutActivation.Suspendue:

                                    <text><span class="badge b-hold">SUSPENDUE</span></text>
                                    ; break;
                            }
                                            </div>
                        <div class="body">
                            <div class="row"><div class="ico c1"><i class="fas fa-bullhorn"></i></div><div><div class="label">Campagne</div><div class="val">@a.Campagne?.Nom</div></div></div>
                            <div class="row"><div class="ico c2"><i class="fas fa-map-marker-alt"></i></div><div><div class="label">Lieu</div><div class="val">@a.Lieu?.Nom - @a.Lieu?.Adresse</div></div></div>
                            <div class="row"><div class="ico c3"><i class="fas fa-calendar"></i></div><div><div class="label">Date</div><div class="val">@a.DateActivation.ToString("dd/MM/yyyy")</div></div></div>
                            <div class="row"><div class="ico c4"><i class="fas fa-clock"></i></div><div><div class="label">Horaire</div><div class="val">@($"{hd.Hours:D2}:{hd.Minutes:D2}") - @($"{hf.Hours:D2}:{hf.Minutes:D2}")</div></div></div>
                            <div class="row"><div class="ico" style="color: #007bff;"><i class="fas fa-images"></i></div><div><div class="label">Preuves</div><div class="val">@(a.Medias?.Count ?? 0) preuve@(a.Medias?.Count > 1 ? "s" : "")</div></div></div>
                            @if (!string.IsNullOrWhiteSpace(a.Description))
                            {
                                <div class="desc"><i class="fas fa-info-circle"></i> @a.Description</div>
                                        }
                                    </div>
                        <div class="foot">
                            <a class="btn pill info" href="@Url.Action("Details", "AgentTerrain", new { id = a.Id })">
                                <i class="fas fa-eye"></i> Voir les détails
                            </a>
                            @if (isBoss)
                            {
                                @if (a.Statut == DiversityPub.Models.enums.StatutActivation.Planifiee && a.DateActivation.Date <= DateTime.Today)
                                {
                                    <button class="btn pill ok" onclick="startActivation('@a.Id')">
                                                    <i class="fas fa-play"></i> Démarrer
                                                </button>
                                            }
                                else if (a.Statut == DiversityPub.Models.enums.StatutActivation.EnCours)
                                            {
                                    <button class="btn pill warn" onclick="pauseActivation('@a.Id')">
                                        <i class="fas fa-pause"></i> Suspendre
                                    </button>
                                    <button class="btn pill danger" onclick="stopActivation('@a.Id')">
                                                    <i class="fas fa-stop"></i> Terminer
                                                </button>
                                            }
                                else if (a.Statut == DiversityPub.Models.enums.StatutActivation.Suspendue)
                                            {
                                    <button class="btn pill ok" onclick="resumeActivation('@a.Id')">
                                                    <i class="fas fa-play"></i> Reprendre
                                                </button>
                                            }
                            }
                            else
                            {
                                <div class="restricted-notice">
                                    <i class="fas fa-user-shield"></i>
                                    <span>Actions limitées - Contacter le responsable</span>
                                        </div>
                            }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="empty-state">
            <div class="icon"><i class="fas fa-tasks"></i></div>
            <h3>Aucune mission assignée</h3>
            <div class="label">Vous n'avez pas encore de missions assignées. Elles apparaîtront ici dès qu'elles seront disponibles.</div>
        </div>
    }


    </div>

@section Scripts {
    <script>
        // ONLINE/OFFLINE
        function setNet(){
          const on = navigator.onLine;
          const od=document.getElementById('onlineDot');
          if(od) od.style.background = on ? '#10B981' : '#F59E0B';
        }
        addEventListener('online',setNet); addEventListener('offline',setNet); setNet();

        // SEARCH + FILTER
        const q=document.getElementById('q'); const chips=document.querySelectorAll('.chip'); const cards=[...document.querySelectorAll('.mission')];
        if(q){ q.addEventListener('input',()=>apply()); }
        chips.forEach(c=>c.addEventListener('click',()=>{ chips.forEach(x=>x.classList.remove('active')); c.classList.add('active'); apply(); }));

        function apply(){
          const query=(q?.value||'').toLowerCase();
          const f=document.querySelector('.chip.active')?.dataset.filter||'all';
          const today=new Date(); today.setHours(0,0,0,0);
          cards.forEach(card=>{
            const txt=(card.dataset.text||'').toLowerCase();
            const d=new Date(card.dataset.date); const s=card.dataset.statut;
            let ok=true;
            if(query && !txt.includes(query)) ok=false;
            if(f==='today') ok = ok && d.getTime()===today.getTime();
            else if(f==='running') ok = ok && s==='EnCours';
            else if(f==='upcoming') ok = ok && d.getTime()>today.getTime() && s!=='Terminee';
            else if(f==='done') ok = ok && s==='Terminee';
            card.style.display = ok?'' : 'none';
          });
        }
        apply();

        // AJAX helpers
        function post(url,data){
          return $.ajax({url, type:'POST', data:Object.assign(data,{__RequestVerificationToken:$('input[name="__RequestVerificationToken"]').val()})});
        }
        window.startActivation = id => confirm('Démarrer cette activation ?') && post('@Url.Action("DemarrerActivation", "AgentTerrain")',{activationId:id}).done(()=>location.reload());
        window.pauseActivation = id => { const motif=prompt('Motif de suspension (obligatoire) :'); if(!motif) return; post('@Url.Action("SuspendreActivation", "AgentTerrain")',{activationId:id,motifSuspension:motif}).done(()=>location.reload()); };
        window.stopActivation = id => confirm('Terminer cette activation ?') && post('@Url.Action("TerminerActivation", "AgentTerrain")',{activationId:id}).done(()=>location.reload());
        window.resumeActivation = id => confirm('Reprendre cette activation ?') && post('@Url.Action("ReprendreActivation", "AgentTerrain")',{activationId:id}).done(()=>location.reload());
    </script>
} 
