@model IEnumerable<DiversityPub.Models.Incident>
@{
    Layout = "_AgentLayout";
    ViewData["Title"] = "Mes Incidents";
    var agent = ViewBag.Agent as DiversityPub.Models.AgentTerrain;
    
    // Calculer les statistiques pour tous les états possibles
    var totalIncidents = 0;
    var incidentsOuverts = 0;
    var incidentsEnCours = 0;
    var incidentsResolus = 0;
    var incidentsFermes = 0;
    var incidentsAnnules = 0;
    
    if (Model != null)
    {
        foreach (var incident in Model)
        {
            totalIncidents++;
            switch (incident.Statut?.ToLower())
            {
                case "ouvert":
                    incidentsOuverts++;
                    break;
                case "en cours":
                case "encours":
                    incidentsEnCours++;
                    break;
                case "résolu":
                case "resolu":
                    incidentsResolus++;
                    break;
                case "fermé":
                case "ferme":
                    incidentsFermes++;
                    break;
                case "annulé":
                case "annule":
                    incidentsAnnules++;
                    break;
                default:
                    incidentsOuverts++; // Par défaut, considérer comme ouvert
                    break;
            }
        }
    }
}

<style>
    /* Override du layout pour cette page spécifique */
    .header {
        background: linear-gradient(135deg, #A32D18 0%, #EDAC00 100%) !important;
    }
    
    .nav-footer {
        background: linear-gradient(135deg, #A32D18 0%, #EDAC00 100%) !important;
    }
    
    .nav-btn {
        background: rgba(255,255,255,0.2) !important;
        border: 1px solid rgba(255,255,255,0.3) !important;
    }
    
    .nav-btn:hover {
        background: rgba(255,255,255,0.3) !important;
    }
    
    .nav-btn.active {
        background: rgba(255,255,255,0.4) !important;
    }
    
    /* Header personnalisé pour cette page */
    .page-header {
        background: linear-gradient(135deg, #A32D18 0%, #EDAC00 100%);
        color: white;
        padding: 2rem 1.5rem;
        margin: -1.5rem -1.5rem 2rem -1.5rem;
        border-radius: 0 0 20px 20px;
    }
    
    .page-header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    .page-title-section {
        display: flex;
        align-items: center;
        gap: 1rem;
    }
    
    .page-icon {
        font-size: 2.5rem;
        color: white;
    }
    
    .page-title {
        color: white;
        font-size: 2rem;
        font-weight: 700;
        margin: 0;
    }
    
    .page-subtitle {
        color: rgba(255,255,255,0.9);
        font-size: 1.1rem;
        margin: 0;
    }
    
    .header-buttons {
        display: flex;
        gap: 1rem;
    }
    
    .header-btn {
        background: rgba(255,255,255,0.2);
        border: 1px solid rgba(255,255,255,0.3);
        color: white;
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 600;
        text-decoration: none;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .header-btn:hover {
        background: rgba(255,255,255,0.3);
        color: white;
        transform: translateY(-1px);
    }
    
    /* Cartes de statistiques */
    .stats-section {
        margin-bottom: 2rem;
    }
    
    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 1rem;
    }
    
    .stat-card {
        background: white;
        border-radius: 12px;
        padding: 1.5rem;
        text-align: center;
        box-shadow: 0 4px 20px rgba(0,0,0,0.08);
        border: 1px solid #e9ecef;
    }
    
    .stat-number {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }
    
    .stat-number.total {
        color: #A32D18;
    }
    
    .stat-number.open {
        color: #ffc107;
    }
    
    .stat-number.in-progress {
        color: #17a2b8;
    }
    
    .stat-number.resolved {
        color: #28a745;
    }
    
    .stat-number.closed {
        color: #6c757d;
    }
    
    .stat-number.cancelled {
        color: #dc3545;
    }
    
    .stat-label {
        color: #6c757d;
        font-weight: 500;
        font-size: 0.8rem;
    }
    
    /* Zone de contenu vide */
    .empty-content {
        background: white;
        border-radius: 16px;
        padding: 3rem 2rem;
        text-align: center;
        box-shadow: 0 4px 20px rgba(0,0,0,0.08);
        margin-top: 2rem;
    }
    
    .empty-icon {
        font-size: 4rem;
        color: #dee2e6;
        margin-bottom: 1rem;
    }
    
    .empty-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 0.5rem;
    }
    
    .empty-subtitle {
        font-size: 1rem;
        color: #6c757d;
        margin-bottom: 2rem;
    }
    
    .cta-button {
        background: #A32D18;
        color: white;
        border: none;
        padding: 1rem 2rem;
        border-radius: 12px;
        font-weight: 600;
        font-size: 1.1rem;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        text-decoration: none;
    }
    
    .cta-button:hover {
        background: #8a2514;
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(163, 45, 24, 0.3);
    }
    
    /* Responsive */
    @@media (max-width: 768px) {
        .page-header-content {
            flex-direction: column;
            gap: 1rem;
            text-align: center;
        }
        
        .header-buttons {
            flex-direction: column;
            width: 100%;
        }
        
        .stats-grid {
            grid-template-columns: repeat(2, 1fr);
        }
    }
</style>

<!-- Header personnalisé -->
<div class="page-header">
    <div class="page-header-content">
        <div class="page-title-section">
            <i class="fas fa-exclamation-triangle page-icon"></i>
            <div>
                <h1 class="page-title">Mes Incidents</h1>
                <p class="page-subtitle">@(agent?.Utilisateur != null ? $"{agent.Utilisateur.Prenom} {agent.Utilisateur.Nom}" : "Agent")</p>
            </div>
        </div>
    </div>
</div>

<!-- Statistiques -->
<div class="stats-section">
    <div class="stats-grid">
        <div class="stat-card">
            <div class="stat-number total">@totalIncidents</div>
            <div class="stat-label">Total</div>
        </div>
        <div class="stat-card">
            <div class="stat-number open">@incidentsOuverts</div>
            <div class="stat-label">Ouverts</div>
        </div>
        <div class="stat-card">
            <div class="stat-number in-progress">@incidentsEnCours</div>
            <div class="stat-label">En Cours</div>
        </div>
        <div class="stat-card">
            <div class="stat-number resolved">@incidentsResolus</div>
            <div class="stat-label">Résolus</div>
        </div>
        <div class="stat-card">
            <div class="stat-number closed">@incidentsFermes</div>
            <div class="stat-label">Fermés</div>
        </div>
        <div class="stat-card">
            <div class="stat-number cancelled">@incidentsAnnules</div>
            <div class="stat-label">Annulés</div>
        </div>
    </div>
</div>

<!-- Contenu principal -->
@if (Model != null && Model.Any())
{
    <div class="content-card">
        <h3 class="page-title">Liste des Incidents</h3>
        <div class="row">
            @foreach (var incident in Model)
            {
                <div class="col-lg-6 col-xl-4 mb-4">
                    <div class="content-card">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h6 class="mb-0">@incident.Titre</h6>
                            <span class="badge @GetStatusBadgeClass(incident.Statut)">
                                @incident.Statut
                            </span>
                        </div>
                        
                        <div class="mb-3">
                            <div class="d-flex align-items-center mb-2">
                                <i class="fas fa-flag text-warning me-2"></i>
                                <strong>@incident.Priorite</strong>
                            </div>
                            <div class="d-flex align-items-center mb-2">
                                <i class="fas fa-calendar text-info me-2"></i>
                                <strong>@incident.DateCreation.ToString("dd/MM/yyyy")</strong>
                            </div>
                            <div class="d-flex align-items-center">
                                <i class="fas fa-clock text-warning me-2"></i>
                                <strong>@incident.DateCreation.ToString("HH:mm")</strong>
                            </div>
                        </div>
                        
                        @if (!string.IsNullOrEmpty(incident.Description))
                        {
                            <p class="text-muted mb-3">
                                <i class="fas fa-info-circle me-1"></i>
                                @incident.Description
                            </p>
                        }
                        
                        <div class="d-flex gap-2">
                            <a href="@Url.Action("Details", "AgentTerrain", new { id = incident.Id })" 
                               class="btn btn-primary-custom flex-fill">
                                <i class="fas fa-eye"></i> Voir
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
else
{
    <div class="empty-content">
        <i class="fas fa-exclamation-triangle empty-icon"></i>
        <h3 class="empty-title">Aucun incident trouvé</h3>
        <p class="empty-subtitle">Vous n'avez pas encore signalé d'incidents.</p>
        <a href="@Url.Action("SignalerIncident", "AgentTerrain")" class="cta-button">
            <i class="fas fa-plus"></i>
            Signaler un Incident
        </a>
    </div>
}

@functions {
    public string GetStatusBadgeClass(string statut)
    {
        return statut?.ToLower() switch
        {
            "ouvert" => "bg-warning",
            "en cours" or "encours" => "bg-info",
            "résolu" or "resolu" => "bg-success",
            "fermé" or "ferme" => "bg-secondary",
            "annulé" or "annule" => "bg-danger",
            _ => "bg-secondary"
        };
    }
} 