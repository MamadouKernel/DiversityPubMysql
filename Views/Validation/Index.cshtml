@model IEnumerable<DiversityPub.Models.Activation>
@{
    ViewData["Title"] = "Validation des Preuves";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1 class="mb-0">
                        <i class="fas fa-check-circle text-primary"></i> Validation des Preuves
                    </h1>
                    <p class="text-muted mb-0">Validez les preuves des activations terminées avant qu'elles soient visibles par les clients</p>
                </div>
                <div class="d-flex gap-2">
                    <a href="@Url.Action("Media", "Validation")" class="btn btn-info">
                        <i class="fas fa-images"></i> Médias en Attente
                    </a>
                    <a href="@Url.Action("Incidents", "Validation")" class="btn btn-warning">
                        <i class="fas fa-exclamation-triangle"></i> Incidents
                    </a>
                </div>
            </div>



            <!-- Statistiques -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card bg-warning text-dark">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h4 class="mb-0">@Model.Count()</h4>
                                    <small>Activations en Attente</small>
                                </div>
                                <i class="fas fa-clock fa-2x opacity-50"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-info text-white">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h4 class="mb-0" id="totalMedias">0</h4>
                                    <small>Médias à Valider</small>
                                </div>
                                <i class="fas fa-images fa-2x opacity-50"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-danger text-white">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h4 class="mb-0" id="totalIncidents">0</h4>
                                    <small>Incidents Ouverts</small>
                                </div>
                                <i class="fas fa-exclamation-triangle fa-2x opacity-50"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-success text-white">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h4 class="mb-0" id="totalAgents">0</h4>
                                    <small>Agents Impliqués</small>
                                </div>
                                <i class="fas fa-users fa-2x opacity-50"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Liste des activations à valider -->
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-list"></i> Activations Terminées en Attente de Validation
                    </h5>
                </div>
                <div class="card-body">
                    @if (!Model.Any())
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-check-circle fa-3x text-success mb-3"></i>
                            <h4>Aucune activation en attente de validation</h4>
                            <p class="text-muted">Toutes les activations terminées ont été validées.</p>
                        </div>
                    }
                    else
                    {
                        <div class="row">
                            @foreach (var activation in Model)
                            {
                                var mediasCount = activation.Medias.Count(m => !m.Valide);
                                var incidentsCount = activation.Incidents.Count;
                                var agentsCount = activation.AgentsTerrain.Count;
                                
                                <div class="col-md-6 col-lg-4 mb-4">
                                    <div class="card h-100 activation-card">
                                        <div class="card-header d-flex justify-content-between align-items-center">
                                            <h6 class="mb-0">
                                                <i class="fas fa-map-marker-alt text-primary"></i> @activation.Nom
                                            </h6>
                                            <span class="badge bg-success">Terminée</span>
                                        </div>
                                        <div class="card-body">
                                            <div class="mb-3">
                                                <small class="text-muted">
                                                    <i class="fas fa-calendar"></i> @activation.DateActivation.ToString("dd/MM/yyyy")
                                                </small>
                                                <br>
                                                <small class="text-muted">
                                                    <i class="fas fa-clock"></i> @activation.HeureDebut.ToString(@"hh\:mm") - @activation.HeureFin.ToString(@"hh\:mm")
                                                </small>
                                            </div>
                                            
                                            @if (activation.Campagne != null)
                                            {
                                                <div class="mb-3">
                                                    <strong>Campagne:</strong> @activation.Campagne.Nom
                                                </div>
                                            }
                                            
                                            @if (activation.Lieu != null)
                                            {
                                                <div class="mb-3">
                                                    <strong>Lieu:</strong> @activation.Lieu.Nom
                                                    @if (!string.IsNullOrEmpty(activation.Lieu.Adresse))
                                                    {
                                                        <br><small class="text-muted"><i class="fas fa-map-marker-alt"></i> @activation.Lieu.Adresse</small>
                                                    }
                                                </div>
                                            }
                                            
                                            <div class="row mb-3">
                                                <div class="col-4 text-center">
                                                    <div class="border rounded p-2">
                                                        <i class="fas fa-images text-info"></i>
                                                        <div class="fw-bold">@mediasCount</div>
                                                        <small class="text-muted">Médias</small>
                                                    </div>
                                                </div>
                                                <div class="col-4 text-center">
                                                    <div class="border rounded p-2">
                                                        <i class="fas fa-exclamation-triangle text-danger"></i>
                                                        <div class="fw-bold">@incidentsCount</div>
                                                        <small class="text-muted">Incidents</small>
                                                    </div>
                                                </div>
                                                <div class="col-4 text-center">
                                                    <div class="border rounded p-2">
                                                        <i class="fas fa-users text-primary"></i>
                                                        <div class="fw-bold">@agentsCount</div>
                                                        <small class="text-muted">Agents</small>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            @if (activation.Responsable != null)
                                            {
                                                <div class="mb-3">
                                                    <strong>Responsable:</strong> 
                                                    @activation.Responsable.Utilisateur.Prenom @activation.Responsable.Utilisateur.Nom
                                                </div>
                                            }
                                        </div>
                                        <div class="card-footer">
                                            <div class="d-flex gap-2">
                                                <a href="@Url.Action("Details", "Validation", new { id = activation.Id })" 
                                                   class="btn btn-primary btn-sm flex-fill">
                                                    <i class="fas fa-eye"></i> Voir Détails
                                                </a>
                                                <button class="btn btn-success btn-sm" onclick="validerActivation('@activation.Id', true)">
                                                    <i class="fas fa-check"></i>
                                                </button>
                                                <button class="btn btn-danger btn-sm" onclick="validerActivation('@activation.Id', false)">
                                                    <i class="fas fa-times"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal de validation -->
<div class="modal fade" id="validationModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-check-circle"></i> Validation d'Activation
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p id="validationMessage"></p>
                <div class="mb-3">
                    <label for="validationComment" class="form-label">Commentaire (optionnel):</label>
                    <textarea class="form-control" id="validationComment" rows="3"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                <button type="button" class="btn btn-primary" id="confirmValidation">Confirmer</button>
            </div>
        </div>
    </div>
</div>

<style>
    .activation-card {
        transition: transform 0.2s ease;
        border: 1px solid #dee2e6;
    }
    
    .activation-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }
    
    .activation-card .card-header {
        background: linear-gradient(135deg, #A32D18, #59311F);
        color: white;
        border-bottom: none;
    }
    
    .activation-card .card-footer {
        background-color: #f8f9fa;
        border-top: 1px solid #dee2e6;
    }
</style>

<script>
    let currentActivationId = null;
    let currentValidation = null;
    
    function validerActivation(activationId, validee) {
        currentActivationId = activationId;
        currentValidation = validee;
        
        const message = validee 
            ? "Êtes-vous sûr de vouloir valider cette activation ? Les preuves seront visibles par le client."
            : "Êtes-vous sûr de vouloir rejeter cette activation ? Les preuves ne seront pas visibles.";
            
        document.getElementById('validationMessage').textContent = message;
        document.getElementById('validationComment').value = '';
        
        const modal = new bootstrap.Modal(document.getElementById('validationModal'));
        modal.show();
    }
    
    document.getElementById('confirmValidation').addEventListener('click', async function() {
        if (!currentActivationId || currentValidation === null) return;
        
        const commentaire = document.getElementById('validationComment').value;
        
        try {
            const response = await fetch('/Validation/ValiderActivation', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({
                    activationId: currentActivationId,
                    validee: currentValidation,
                    commentaire: commentaire
                })
            });
            
            const result = await response.json();
            
            if (result.success) {
                // Afficher un toast de succès
                showToast('success', result.message);
                
                // Recharger la page après un délai
                setTimeout(() => {
                    location.reload();
                }, 1500);
            } else {
                showToast('error', result.message);
            }
        } catch (error) {
            showToast('error', 'Erreur lors de la validation');
        }
        
        // Fermer le modal
        const modal = bootstrap.Modal.getInstance(document.getElementById('validationModal'));
        modal.hide();
    });
    
    function showToast(type, message) {
        const toastContainer = document.querySelector('.toast-container');
        const toast = document.createElement('div');
        toast.className = `toast align-items-center text-white bg-${type === 'success' ? 'success' : 'danger'} border-0`;
        toast.setAttribute('role', 'alert');
        toast.setAttribute('aria-live', 'assertive');
        toast.setAttribute('aria-atomic', 'true');
        
        toast.innerHTML = `
            <div class="d-flex">
                <div class="toast-body">
                    <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-triangle'} me-2"></i> ${message}
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
            </div>
        `;
        
        toastContainer.appendChild(toast);
        const bsToast = new bootstrap.Toast(toast);
        bsToast.show();
    }
    
    // Mettre à jour les statistiques
    document.addEventListener('DOMContentLoaded', function() {
        const activations = @Html.Raw(Json.Serialize(Model));
        let totalMedias = 0;
        let totalIncidents = 0;
        let totalAgents = new Set();
        
        activations.forEach(activation => {
            totalMedias += activation.medias.filter(m => !m.valide).length;
            totalIncidents += activation.incidents.length;
            activation.agentsTerrain.forEach(agent => totalAgents.add(agent.id));
        });
        
        document.getElementById('totalMedias').textContent = totalMedias;
        document.getElementById('totalIncidents').textContent = totalIncidents;
        document.getElementById('totalAgents').textContent = totalAgents.size;
    });
</script> 